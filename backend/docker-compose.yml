version: "3.9"

services:
  api:
    build: .
    container_name: greyoak-api
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
      - ./logs:/app/logs
    command: uvicorn greyoak_score.api.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - greyoak-network

  db:
    image: postgres:15-alpine
    container_name: greyoak-db
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER} -d ${PGDATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - greyoak-network

  adminer:
    image: adminer:4
    container_name: greyoak-adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - greyoak-network

volumes:
  pgdata:

networks:
  greyoak-network:
    driver: bridge
